Strict

#GLFW_WINDOW_TITLE="Builtris"
#GLFW_WINDOW_WIDTH=512
#GLFW_WINDOW_HEIGHT=512
#GLFW_WINDOW_RESIZABLE=True
#GLFW_WINDOW_SAMPLES=0

Import mojo.app
Import mojo.input
Import vortex
Import src.grid
Import src.tile

Const SCREEN_SIZE:Int = 64

Class BuiltrisApp Extends App Final
	Method OnCreate:Int()
		SetUpdateRate(0)
		SetSwapInterval(0)
		Seed = Millisecs()
		If Not World.Init() Then EndApp()
		World.SunRotation(45, -135)
		
		mFont = Font.Load("8-bit-hud_8.fnt.dat")
		
		mCam = New Camera()
		'mCam.Orthographic = True
		'mCam.FovY = 4
		mCam.FovY = 35
		mCam.Viewport(0, 0, SCREEN_SIZE, SCREEN_SIZE)
		mCam.Framebuffer = New Framebuffer(SCREEN_SIZE, SCREEN_SIZE, True)
		mCam.Position(Tile.NumColumns * 1.75 / 3, 0, 0.1)
		mCam.Rotate(45, -45, 0)
		mCam.Move(0, 0, -4)
		mCam.Position(mCam.X + 0.5, mCam.Y + 2, mCam.Z - 0.5)
		
		mGrid = Grid.Create([
			[101, 102, 103],
			[104,   0, 106],
			[107, 108, 109]])
		
		mRun = Texture.Load("run.png")
		
		Return False
	End
	
	Method OnUpdate:Int()
		'End with escape key
		#If TARGET<>"html5"
		If KeyHit(KEY_ESCAPE) Then EndApp()
		#End
		
		UpdatePick()
		UpdateButtonColor()
		
		'Update world
		World.Update()
		
		Return False
	End
	
	Method OnRender:Int()
		'Draw world to framebuffer
		mScreenRect = ScreenRect.Calculate()
		World.Render()
		
		'Draw UI to framebuffer
		mCam.Framebuffer.Use()
		Graphics.Setup2D(0, 0, SCREEN_SIZE, SCREEN_SIZE)
		If mButtonHovered Then Graphics.Color(Color.Green) Else Graphics.Color(Color.Multiply(Color.Green, 0.5))
		mRun.Draw(SCREEN_SIZE - 8, SCREEN_SIZE - 12)
		Framebuffer.UseScreen()
		
		'Draw framebuffer to screen
		Graphics.Setup2D(0, 0, DeviceWidth(), DeviceHeight())
		Graphics.Clear()
		mCam.Framebuffer.ColorTexture.Draw(mScreenRect.X, mScreenRect.Y, mScreenRect.Width, -mScreenRect.Height)
		Return False
	End
Private
	Field mFont:Font
	Field mCam:Camera
	Field mGrid:Grid
	Field mRun:Texture
	Field mButtonHovered:Bool
	Field mScreenRect:ScreenRect
	
	Method UpdatePick:Void()
		Local ratio:Float = SCREEN_SIZE * 1.0 / mScreenRect.Width
		If MouseHit(MOUSE_LEFT) And World.CameraPick(mCam, (MouseX() - mScreenRect.X) * ratio, (MouseY() - mScreenRect.Y) * ratio)
			mGrid.MoveTile(mGrid.TileAt(World.PickedEntity()))
		End
	End
	
	Method UpdateButtonColor:Void()
		mButtonHovered = MouseX() >= mScreenRect.X + mScreenRect.Width - (mScreenRect.Width / 4) And MouseY() >= mScreenRect.Y + mScreenRect.Height - (mScreenRect.Height / 4)
	End
End

Function Main:Int()
	New BuiltrisApp
	Return False
End

Class ScreenRect
	Field X:Int
	Field Y:Int
	Field Width:Int
	Field Height:Int
	
	Function Calculate:ScreenRect()
		Local rect:ScreenRect = New ScreenRect
		If DeviceWidth() > DeviceHeight()
			Local ratio:Float = Float(DeviceHeight()) / DeviceWidth()
			rect.Width = DeviceWidth() * ratio
			rect.Height = DeviceHeight()
			rect.X = (DeviceWidth() - rect.Width) / 2
			rect.Y = 0
		Else
			Local ratio:Float = Float(DeviceWidth()) / DeviceHeight()
			rect.Width = DeviceWidth()
			rect.Height = DeviceHeight() * ratio
			rect.X = 0
			rect.Y = (DeviceHeight() - rect.Height) / 2
		End
		Return rect
	End
End