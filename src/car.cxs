Strict

Private
Import tile
Import vortex

Public
Class Car
	Method New(tile:Tile)
		mParent = New Entity()
		mCar = New Model(LoadUnitMesh("sedanSports.msh.dat"), mParent)
		mCar.Rotate(0, -90, 0)
		mCar.Scale(0.8, 0.8, 0.8)
		mParent.Position(tile.X, 0, tile.Z)
		mParent.Rotate(0, Yaw(tile), 0)
	End
	
	Method Entity:Entity() Property
		Return mParent
	End
	
	Method RotateToTile:Void(tile:Tile)
		Local myTile:Tile = Tile.FromEntity(mParent)
		Local yaw:Float = mParent.Yaw
		If myTile.Column < tile.Column
			yaw = 90
		Elseif myTile.Column > tile.Column
			yaw = -90
		Elseif myTile.Row < tile.Row
			yaw = 180
		Else
			yaw = 0
		End
		mParent.Rotate(0, yaw, 0)
	End
Private
	Field mParent:Entity
	Field mCar:Model
	
	Function LoadUnitMesh:Mesh(filename:String)
		Local wasLoaded:Bool = Mesh.IsLoaded(filename)
		Local mesh:Mesh = Mesh.Load(filename)
		If Not wasLoaded
			Local max:Float = Max(Max(mesh.Width, mesh.Height), mesh.Depth)
			mesh.Scale(1 / max, 1 / max, 1 / max)
		End
		Return mesh
	End
	
	Method Yaw:Float(tile:Tile)
		If tile.Column < 0
			Return 90
		Elseif tile.Column >= Tile.NumRows
			Return -90
		Elseif tile.Row < 0
			Return 180
		Else
			Return 0
		End
	End
End
