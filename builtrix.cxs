Strict

#GLFW_WINDOW_TITLE="Builtrix"
#GLFW_WINDOW_WIDTH=512
#GLFW_WINDOW_HEIGHT=512
#HTML5_CANVAS_WIDTH=512
#HTML5_CANVAS_HEIGHT=512
#GLFW_WINDOW_RESIZABLE=True
#GLFW_WINDOW_SAMPLES=0

Import mojo.app
Import mojo.input
Import vortex
Import src.animator.animator
Import src.animator.widgetpositionanimator
Import src.car
Import src.flagpole
Import src.level
Import src.tile
Import src.ui.texturewidget
Import src.ui.textwidget
Import src.ui.widget

Const SCREEN_SIZE:Int = 64

Class BuiltrixApp Extends App Implements AnimatorDelegate, WidgetDelegate
	Method OnCreate:Int()
		SetUpdateRate(20)
		SetSwapInterval(True)
		Seed = Millisecs()
		If Not World.Init() Then EndApp()
		World.SunRotation(45, -135)
		
		mFont = Font.Load("8-bit-hud_8.fnt.dat")
		
		mCam = New Camera()
		mCam.FovY = 35
		mCam.Viewport(0, 0, SCREEN_SIZE, SCREEN_SIZE)
		mCam.Framebuffer = New Framebuffer(SCREEN_SIZE, SCREEN_SIZE, True)
		mCam.Position(Tile.NumColumns / 2, 0, Tile.NumRows / 2)
		mCam.Rotate(45, -45, 0)
		mCam.Move(0, 0, -7)
		mCam.Position(mCam.WorldX, mCam.WorldY - 0.5, mCam.WorldZ)
		
		mLevel = New Level(1)
		mCar = New Car(mLevel.CarTile)
		mFlag = New FlagPole(mLevel.FlagTile)
		
		mButton = New TextureWidget(Texture.Load("run.png"), SCREEN_SIZE - 8, SCREEN_SIZE - 12, Self)
		mBackgroundText = New TextWidget(mFont, "", 0, 0, Null)
		mBackgroundText.Color = Color.Multiply(Color.Green, 0.25)
		mBackgroundText.Visible = False
		mForegroundText = New TextWidget(mFont, "", 0, 0, Null)
		mForegroundText.Color = Color.Yellow
		mForegroundText.Visible = False
		
		mScreenRect = ScreenRect.Calculate()
		
		PresentText("Level 1")
		
		Return False
	End
	
	Method OnUpdate:Int()
		'End with escape key
		#If TARGET<>"html5"
		If KeyHit(KEY_ESCAPE) Then EndApp()
		#End
		
		mScreenRect = ScreenRect.Calculate()
		Local mouseX:Int = mScreenRect.ScreenX(MouseX())
		Local mouseY:Int = mScreenRect.ScreenY(MouseY())
		UpdatePick()
		UpdateButton(mouseX, mouseY)
		Animator.UpdateAll()
		Widget.UpdateAll(mouseX, mouseY, MouseHit(MOUSE_LEFT) <> 0)
		World.Update()
		
		Return False
	End
	
	Method OnRender:Int()
		'Draw world to framebuffer
		World.Render()
		
		'Draw UI to framebuffer
		mCam.Framebuffer.Use()
		Graphics.Setup2D(0, 0, SCREEN_SIZE, SCREEN_SIZE)
		Widget.DrawAll()
		Framebuffer.UseScreen()
		
		'Draw framebuffer to screen
		Graphics.Setup2D(0, 0, DeviceWidth(), DeviceHeight())
		Graphics.Clear()
		mCam.Framebuffer.ColorTexture.Draw(mScreenRect.X, mScreenRect.Y, mScreenRect.Width, -mScreenRect.Height)
		Return False
	End
	
	Method OnAnimatorEnd:Void(animator:Animator)
		If animator.Name = TEXTENTER_ANIMATOR
			DiscardText()
		End
	End
	
	Method OnClick:Void(widget:Widget)
		mCar.SetPath(mLevel.CalculatePathToFlag(), mLevel.FlagTile)
	End
Private
	Const TEXTENTER_ANIMATOR:String = "TextEnter"

	Field mFont:Font
	Field mCam:Camera
	Field mLevel:Level
	Field mCar:Car
	Field mFlag:FlagPole
	Field mButton:Widget
	Field mBackgroundText:TextWidget
	Field mForegroundText:TextWidget
	Field mScreenRect:ScreenRect
	
	Method UpdatePick:Void()
		Local ratio:Float = SCREEN_SIZE * 1.0 / mScreenRect.Width
		If MouseHit(MOUSE_LEFT) And World.CameraPick(mCam, (MouseX() - mScreenRect.X) * ratio, (MouseY() - mScreenRect.Y) * ratio)
			mLevel.MoveTile(Tile.FromEntity(World.PickedEntity()))
		End
	End
	
	Method UpdateButton:Void(mouseX:Int, mouseY:Int)
		mButton.Visible = Not mCar.Moving And mLevel.CarHasEntry()
		If mButton.IsHovered(mouseX, mouseY)
			mButton.Color = Color.Green
		Else
			mButton.Color = Color.Multiply(Color.Green, 0.5)
		End
	End
	
	Method PresentText:Void(text:String)
		mForegroundText.Text = text
		mForegroundText.X = -mForegroundText.Width
		mForegroundText.Y = (SCREEN_SIZE - mForegroundText.Height) / 2
		mForegroundText.Visible = True
		New WidgetPositionAnimator(mForegroundText, (SCREEN_SIZE - mForegroundText.Width) / 2, mForegroundText.Y, TEXTENTER_ANIMATOR, 0.2, 0, Self)
		mBackgroundText.Text = text
		mBackgroundText.X = SCREEN_SIZE
		mBackgroundText.Y = (SCREEN_SIZE - mBackgroundText.Height) / 2 + 1
		mBackgroundText.Visible = True
		New WidgetPositionAnimator(mBackgroundText, (SCREEN_SIZE - mBackgroundText.Width) / 2 + 1, mBackgroundText.Y, "", 0.2, 0, Null)
	End
	
	Method DiscardText:Void()
		New WidgetPositionAnimator(mForegroundText, -mForegroundText.Width, mForegroundText.Y, "", 0.2, 1, Null)
		New WidgetPositionAnimator(mBackgroundText, SCREEN_SIZE, mBackgroundText.Y, "", 0.2, 1, Null)
	End
End

Function Main:Int()
	New BuiltrixApp
	Return False
End

Class ScreenRect
	Field X:Int
	Field Y:Int
	Field Width:Int
	Field Height:Int
	
	Function Calculate:ScreenRect()
		Local rect:ScreenRect = New ScreenRect
		If DeviceWidth() > DeviceHeight()
			Local ratio:Float = Float(DeviceHeight()) / DeviceWidth()
			rect.Width = DeviceWidth() * ratio
			rect.Height = DeviceHeight()
			rect.X = (DeviceWidth() - rect.Width) / 2
			rect.Y = 0
		Else
			Local ratio:Float = Float(DeviceWidth()) / DeviceHeight()
			rect.Width = DeviceWidth()
			rect.Height = DeviceHeight() * ratio
			rect.X = 0
			rect.Y = (DeviceHeight() - rect.Height) / 2
		End
		Return rect
	End
	
	Method ScreenX:Int(x:Int)
		Return Float(x - Self.X) * SCREEN_SIZE / Self.Width
	End
	
	Method ScreenY:Int(y:Int)
		Return Float(y - Self.Y) * SCREEN_SIZE / Self.Height
	End
End
